@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "New Client";
    ViewData["Description"] = "New Client";
}

@model MainSite.Models.UserNewModel

<div id="page-wrapper">
    <h3 class="box-title"> Please fill out the form related to new client and hit submit. </h3>
    <div class="white-box">
        <form class="form-horizontal" method="post" action="/Dashboard/ClientCreatePost">
            <div class="form-group">
                <label class="col-md-12" for="example-email">Email <span class="help"> e.g. "example@gmail.com"</span> (Required)</label>
                <div class="col-md-12">
                    @Html.EditorFor(x => x.Username, new { htmlAttributes = new { style = "width: 400px", @class = "form-control", placeholder = "Email", onkeyup = "toggleButton(this,'submit');" } })
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-12">Current VA rating from <span> <a href="https://www.ebenefits.va.gov/" target="_blank">eBenefits</a>.</span>? (Required)</label>
                <div class="col-md-12">
                    @Html.DropDownListFor(x => x.CurrentRating, (SelectList)ViewBag.CurrentRatingsList)
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-12">Full Name (Optional)</label>
                <div class="col-md-12">
                    @Html.EditorFor(x => x.FullName, new { htmlAttributes = new { style = "width: 400px", @class = "form-control", placeholder = "Full Name" } })
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-12">Phone (Optional)</label>
                <div class="col-md-12">
                    @Html.EditorFor(x => x.PhoneNumber, new { htmlAttributes = new { style = "width: 400px", @class = "form-control", placeholder = "Phone Number" } })
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-12">Note  (Optional)</label>
                <div class="col-md-12">
                    @Html.EditorFor(x => x.Note, new { htmlAttributes = new { style = "width: 100%", @class = "form-control", placeholder = "Note" } })
                </div>
            </div>
            <button type="submit" id="submit" name="submit" value="submit" class="btn btn-success waves-effect waves-light m-r-10">Submit</button>
            <button type="submit" name="submit" value="cancel"  class="btn btn-inverse waves-effect waves-light">Cancel</button>

            @if (ViewData["UserExist"] != null)
            {
                <div class="card">
                    <div class="card-block">
                        <h4 class="card-title">New Client Register</h4>
                        <p class="card-text">It seems the user already exists in the system.  Do you want to view the profile?</p>
                        <a href="javascript:void(0)" id="to-recover" class="text-dark pull-right"><i class="fa fa-lock m-r-5"></i> Go to this profile</a>
                    </div>
                </div>
            }
            else if (ViewData["HasError"] != null)
            {
                <div class="card">
                    <div class="card-block">
                        <h4 class="card-title">Encountered an Error</h4>
                        <p class="card-text">We are temporarily unable to process your request.</p>
                    </div>
                </div>
            }
            else if (ViewData["InvalidCredentials"] != null)
            {
                <div class="card">
                    <div class="card-block">
                        <h4 class="card-title">Invalid Username</h4>
                        <p class="card-text">Must be a valid email address</p>
                    </div>
                </div>
            }
           
        </form>



    </div>
</div>

<script type="text/javascript">

    toggleButton('Username', 'submit');

    function toggleButton(ref, bttnID) {
        document.getElementById(bttnID).disabled = ((ref.value !== ref.defaultValue) ? false : true);
    }

</script>

